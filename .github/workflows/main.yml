
on: [push]

# Environment  variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: githubtestingreg.azurecr.io
  CLUSTER_NAME: my-kc
  CLUSTER_RESOURCE_GROUP: my-first-rg
  APP_NAME: inventorymanagement
  NAMESPACE: default
  SECRET: akspullsecret
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
           
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Connect to AKV'
      uses: Azure/get-keyvault-secrets@v1
      with: 
        keyvault: "my-first-akv1"
        secrets: 'REGISTRY-USERNAME, REGISTRY-PASSWORD'
      id: myGetSecretAction
      
    # Connect to Azure Container Registry (ACR)
    - name: Build and push
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}
        username: ${{ steps.myGetSecretAction.outputs.REGISTRY-USERNAME }} 
        password: ${{ steps.myGetSecretAction.outputs.REGISTRY-PASSWORD }}
        
    # Container build and push to a Azure Container Registry (ACR)
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}
      
      
    - name: Set the target Azure Kubernetes Service (AKS) cluster    
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create image pull secret for ACR
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}
        container-registry-username: ${{ steps.myGetSecretAction.outputs.REGISTRY-USERNAME }} 
        container-registry-password: ${{ steps.myGetSecretAction.outputs.REGISTRY-PASSWORD }} 
        secret-name: ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
        force: true
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          Deployment1.yml
        images: | 
          ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
    
